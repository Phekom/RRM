apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'deploygate'
apply plugin: 'kotlin-android-extensions'

def getDate() {
    return new Date().format('yyyy-MM-dd HH-mm-ss')
}

android {
    flavorDimensions "default"

    compileSdkVersion compile_version

    def versionPropsFile = file('version.properties')
    def localPropsFile = file('../local.properties')

    def versionBuild
    def versionBuildDate
    def appId = "za.co.xisystems.itismaintenance"

    if (!versionPropsFile.canRead()) {
        file('version.properties').text = "VERSION_BUILD 0"
    }

    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    versionBuild = (versionProps['VERSION_BUILD'] == null) ? 0 : versionProps['VERSION_BUILD'].toInteger() + 1

    // local properties
    def Properties localProps = new Properties();
    localProps.load(new FileInputStream(localPropsFile))

    def qa_env = localProps['QA_HOST'].toString()
    def dev_env = localProps['DEV_HOST'].toString()
    def xi_env = localProps['XI_HOST'].toString()
    def prod_env = localProps['PROD_HOST'].toString()
    def sdev_env = localProps['SDEV_HOST'].toString()

    def registerAutoFillTest = (versionProps['REGISTER_AUTO_FILL_TEST'] == null) ? false : versionProps['REGISTER_AUTO_FILL_TEST']

    versionProps['REGISTER_AUTO_FILL_TEST'] = registerAutoFillTest.toString()
    versionProps['VERSION_BUILD'] = versionBuild.toString()
    versionBuildDate = getDate()
    versionProps['VERSION_BUILD_DATE'] = versionBuildDate
    versionProps.store(versionPropsFile.newWriter(), null)

    defaultConfig {
        applicationId appId
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
//        versionName "1.0 #" + versionBuild + " " + versionBuildDate
        versionName "1.5.51"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", "false")
        buildConfigField("String", "USERNAME_TEST", '"niebuhrk"')
        buildConfigField("String", "PASSWORD_TEST", '"kallien"')
        buildConfigField("String", "USERNAME_STUB", '"user"')
        buildConfigField("String", "PASSWORD_STUB", '"pass"')
        buildConfigField("String", "PIN_CODE", '"1234"')
        buildConfigField("boolean", "STUB", "false")
        def version_build = versionBuild.toString()
        buildConfigField("String", "VERSION_BUILD", '"' + versionBuild + '"')
        buildConfigField("String", "VERSION_BUILD_DATE", '"' + versionBuildDate + '"')

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Disables PNG crunching for the release build type.
            crunchPngs false
            // testCoverageEnabled false
            minifyEnabled false
            useProguard false

            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    productFlavors {
        stub {
            splits.abi.enable = false
            splits.density.enable = false
            buildConfigField("boolean", "STUB", "true")
            applicationId appId + ".sub"
            // buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", "true")
            manifestPlaceholders = [app_name: "RRM-Demo", app_icon: "@mipmap/ic_launcher_demo", HOCKEYAPP_APP_ID: "59d2e5d0f7ac4b28a08c30639089d198"]
            buildConfigField "String", "HOCKEYAPP_APP_ID", "\"59d2e5d0f7ac4b28a08c30639089d198\""
            buildConfigField("String", "API_HOST", qa_env)
            // The following configuration limits the "dev" flavor to using
            // English stringresources and xxhdpi screen-density resources.
            resConfigs "en", "xxhdpi"
            buildConfigField("String", "USERNAME_TEST", '"stubtest"')
            buildConfigField("String", "PASSWORD_TEST", '"1234"')
            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", registerAutoFillTest.toString())
        }

        dev {
            splits.abi.enable = false;
            splits.density.enable = false;
            resConfigs "en", "xxhdpi"

            applicationId appId + ".dev"

            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", registerAutoFillTest.toString())
            manifestPlaceholders = [app_name: "RRM-Dev", app_icon: "@mipmap/ic_launcher_dev", HOCKEYAPP_APP_ID: ""]
            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", "true")
            buildConfigField("String", "API_HOST", dev_env)
            buildConfigField "String", "HOCKEYAPP_APP_ID", "\"\""
        }

        xi {
            splits.abi.enable = false;
            splits.density.enable = false;
            resConfigs "en", "xxhdpi"

            applicationId appId + ".xi"

            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", registerAutoFillTest.toString())
            manifestPlaceholders = [app_name: "RRM-Xi", app_icon: "@mipmap/ic_launcher_xi", HOCKEYAPP_APP_ID: "7b77445b888a411b83ae27491a5bd7c9"]
            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", "true")
            buildConfigField("String", "API_HOST", xi_env)
            buildConfigField "String", "HOCKEYAPP_APP_ID", "\"7b77445b888a411b83ae27491a5bd7c9\""
        }

        sdev { // Sanral Dev
            splits.abi.enable = false;
            splits.density.enable = false;
            resConfigs "en", "xxhdpi"

            applicationId appId + ".sdev"

            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", registerAutoFillTest.toString())
            manifestPlaceholders = [app_name: "RRM-SDev", app_icon: "@mipmap/ic_launcher_sdev", HOCKEYAPP_APP_ID: "7b77445b888a411b83ae27491a5bd7c9"]
            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", "true")
            buildConfigField("String", "API_HOST", sdev_env)
            buildConfigField "String", "HOCKEYAPP_APP_ID", "\"7b77445b888a411b83ae27491a5bd7c9\""
        }

        qa { // Sanral QA
            splits.abi.enable = false;
            splits.density.enable = false;
            resConfigs "en", "xxhdpi"

            applicationId appId + ".qa"

            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", registerAutoFillTest.toString())
            manifestPlaceholders = [app_name: "RRM-Qa", app_icon: "@mipmap/ic_launcher_qa", HOCKEYAPP_APP_ID: "7b77445b888a411b83ae27491a5bd7c9"]
            buildConfigField("boolean", "REGISTER_AUTO_FILL_TEST", "false")
            buildConfigField("String", "API_HOST", qa_env)
            buildConfigField "String", "HOCKEYAPP_APP_ID", "\"7b77445b888a411b83ae27491a5bd7c9\""
        }

        prod {
            appId = "za.co.nra.itisrrm"
            applicationId appId
            manifestPlaceholders = [app_name: "RRM", app_icon: "@mipmap/ic_launcher", HOCKEYAPP_APP_ID: "722fd7502681497f96d51c26284bc056"]
            buildConfigField("String", "API_HOST", prod_env)
            buildConfigField "String", "HOCKEYAPP_APP_ID", "\"722fd7502681497f96d51c26284bc056\""
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    dataBinding {
        enabled = true
    }
}


androidExtensions {
    experimental = true
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha03'

//    implementation "com.google.android.gms:play-services-location:${gms_library_version}"

    implementation 'androidx.navigation:navigation-fragment:2.2.0-rc04'
    implementation 'androidx.navigation:navigation-ui:2.2.0-rc04'

    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.takusemba:cropme:1.0.6'
    implementation 'org.apache.sanselan:sanselan:0.97-incubator'

    //viewModel and LiveData
// Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$reactivestreams_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc03'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-rc03'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    //Recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //Glide
    def glideVersion = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //Paging
    implementation 'androidx.paging:paging-runtime:2.1.1'

    //Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-jackson:2.6.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.takusemba:cropme:1.0.6'

    //Location
//    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.firebase:firebase-appindexing:10.0.0'
    implementation 'com.google.android.gms:play-services:12.0.0'


    implementation 'frankiesardo:icepick:3.2.0'
    annotationProcessor 'frankiesardo:icepick-processor:3.2.0'

    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"

    // Better Date-time
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    //Kodein Dependency Injection
    implementation 'org.kodein.di:kodein-di-framework-android-core:6.5.1'
    implementation 'org.kodein.di:kodein-di-generic-jvm:6.5.1'
    implementation 'org.kodein.di:kodein-di-framework-android-x:6.5.1'

// Koin AndroidX Scope features
    implementation 'org.koin:koin-android:2.0.1'
    implementation 'org.koin:koin-androidx-viewmodel:2.0.1'


    //Android  Room
    def room_version = "2.2.3" // alpha06 has bugs
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'com.xwray:groupie:2.7.0'
    implementation 'com.xwray:groupie-kotlin-android-extensions:2.7.0'
    implementation 'com.xwray:groupie-databinding:2.7.0'
//preference
    implementation "androidx.preference:preference-ktx:1.1.0"

    implementation 'com.amitshekhar.android:android-networking:1.0.2'
    implementation 'com.amitshekhar.android:jackson-android-networking:1.0.2'


    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.2'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.2"

//    implementation "com.jakewharton:butterknife:8.8.1"
//    kapt "com.jakewharton:butterknife-compiler:8.8.1"

    implementation 'com.raygun:raygun4android:4.0.0'
    implementation 'org.springframework.android:spring-android-rest-template:2.0.0.M1'

//    implementation "com.google.dagger:dagger:$daggerVersion"
//    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
//    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
//    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
//    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
//    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


    implementation 'org.apache.sanselan:sanselan:0.97-incubator'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation 'commons-io:commons-io:2.6'

    implementation 'frankiesardo:icepick:3.2.0'
    annotationProcessor 'frankiesardo:icepick-processor:3.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.takusemba:cropme:1.0.6'



//    implementation 'com.android.support:multidex:1.0.3'


}
