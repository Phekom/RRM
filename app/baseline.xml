<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
      <ID>ClassNaming:All_IDs.kt$All_IDs</ID>
      <ID>ClassNaming:ID_Provider.kt$ID_Provider</ID>
      <ID>ComplexCondition:CompressionProvider.kt$CompressionProvider$mMaxWidth &gt; 0 &amp;&amp; mMaxHeight &gt; 0 &amp;&amp; (maxWidth &gt; mMaxWidth || maxHeight &gt; mMaxHeight)</ID>
      <ID>ComplexMethod:MainActivity.kt$MainActivity$override fun onNavigationItemSelected(item: MenuItem): Boolean</ID>
      <ID>ConstructorParameterNaming:PrimaryKeyValueDTO.kt$PrimaryKeyValueDTO$@SerializedName("Key") val primary_key: String?</ID>
      <ID>EmptyFunctionBlock:AppExecutor.kt$AppExecutor.MainThreadExecutor${}</ID>
      <ID>EmptyFunctionBlock:CapturedPictureRepository.kt$CapturedPictureRepository${ }</ID>
      <ID>EmptyFunctionBlock:SpinnerHelper.kt$SpinnerHelper.&lt;no name provided&gt;${}</ID>
      <ID>EmptyIfBlock:GoToFragment.kt$GoToFragment.&lt;no name provided&gt;${ }</ID>
      <ID>EmptySecondaryConstructor:Image.kt$Image${ }</ID>
      <ID>ForbiddenComment:CaptureItemDetailFragment.kt$// TODO: Rename parameter arguments, choose names that match</ID>
      <ID>ForbiddenComment:CaptureItemDetailFragment.kt$CaptureItemDetailFragment$// TODO: Rename and change types of parameters</ID>
      <ID>ForbiddenComment:CaptureItemDetailFragment.kt$CaptureItemDetailFragment.Companion$// TODO: Rename and change types and number of parameters</ID>
      <ID>ForbiddenComment:CaptureItemMeasurePhotoFragment.kt$CaptureItemMeasurePhotoFragment$// TODO: Check earlier and get user to switch Location on.</ID>
      <ID>ForbiddenComment:CaptureItemMeasurePhotoFragment.kt$CaptureItemMeasurePhotoFragment$// TODO: Have location validated here</ID>
      <ID>ForbiddenComment:CaptureMapFragment.kt$// TODO: Rename parameter arguments, choose names that match</ID>
      <ID>ForbiddenComment:CaptureMapFragment.kt$CaptureMapFragment$// TODO: Rename and change types of parameters</ID>
      <ID>ForbiddenComment:CaptureMapFragment.kt$CaptureMapFragment.Companion$// TODO: Rename and change types and number of parameters</ID>
      <ID>ForbiddenComment:CapturePagingFragment.kt$// TODO: Rename parameter arguments, choose names that match</ID>
      <ID>ForbiddenComment:CapturePagingFragment.kt$CapturePagingFragment$// TODO: Rename and change types of parameters</ID>
      <ID>ForbiddenComment:CapturePagingFragment.kt$CapturePagingFragment.Companion$// TODO: Rename and change types and number of parameters</ID>
      <ID>ForbiddenComment:GridGalleryViewModel.kt$GridGalleryViewModel$// TODO: Implement the ViewModel</ID>
      <ID>ForbiddenComment:ProgressButtonExtensions.kt$// TODO: Exchange hard-coded colours to match the theme</ID>
      <ID>FunctionNaming:AppExecutor.kt$AppExecutor$fun AppExecutor( diskIO: Executor?, mainThread: Executor?, networkIO: Executor? ): AppExecutor?</ID>
      <ID>FunctionParameterNaming:ActivityDao.kt$ActivityDao$ACT_ID: Long</ID>
      <ID>FunctionParameterNaming:ActivityDao.kt$ActivityDao$ACT_NAME: String?</ID>
      <ID>FunctionParameterNaming:ActivityDao.kt$ActivityDao$ACT_TYPE_ID: Long?</ID>
      <ID>FunctionParameterNaming:ActivityDao.kt$ActivityDao$APPROVAL_ID: Long?</ID>
      <ID>FunctionParameterNaming:ActivityDao.kt$ActivityDao$CONTENT_ID: Long?</ID>
      <ID>FunctionParameterNaming:ActivityDao.kt$ActivityDao$DESCRIPTION: String?</ID>
      <ID>FunctionParameterNaming:PrimaryKeyValueDao.kt$PrimaryKeyValueDao$primary_key: String?</ID>
      <ID>LargeClass:AddProjectFragment.kt$AddProjectFragment : BaseFragment</ID>
      <ID>LargeClass:CaptureWorkFragment.kt$CaptureWorkFragment : LocationFragment</ID>
      <ID>LargeClass:EstimatePhotoFragment.kt$EstimatePhotoFragment : LocationFragment</ID>
      <ID>LargeClass:OfflineDataRepository.kt$OfflineDataRepository : SafeApiRequest</ID>
      <ID>LongMethod:DeferredLocationValidation.kt$DeferredLocationViewModel$fun checkLocations(jobId: String)</ID>
      <ID>LongMethod:ExpandableHeaderMeasureItem.kt$ExpandableHeaderMeasureItem$private fun showAddMeasurementQuantityDialog( measureItem: JobItemEstimateDTO, jobForJobItemEstimate: JobDTO, jobItemMeasurePhotoDTO: ArrayList&lt;JobItemMeasurePhotoDTO&gt; )</ID>
      <ID>LongMethod:GoToFragment.kt$GoToFragment$@SuppressLint("MagicNumber") private fun initNavigation(structure: Point?)</ID>
      <ID>LongMethod:ImageUtil.kt$ImageUtil$@Throws(IOException::class) private fun decodeSampledBitmapFromFile( imageFile: File, reqWidth: Float, reqHeight: Float ): Bitmap?</ID>
      <ID>LongMethod:JobApprovalDataRepository.kt$JobApprovalDataRepository$private fun processWorkflowUpdates(job: WorkflowJobDTO)</ID>
      <ID>LongMethod:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$private suspend fun moveJobToNextWorkflow( activity: FragmentActivity, myJob: WorkflowJobDTO?, job: JobDTO )</ID>
      <ID>LongMethod:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$private suspend fun persistWorkflowJob( job: WorkflowJobDTO, pushMeasures: Boolean = false )</ID>
      <ID>LongMethod:OfflineDataRepository.kt$OfflineDataRepository$private suspend fun saveJobItemMeasuresForEstimate( jobItemMeasures: java.util.ArrayList&lt;JobItemMeasureDTO&gt;, job: JobDTO )</ID>
      <ID>LongMethod:PhotoUtil.kt$PhotoUtil$ // public static Map&lt;String, String&gt; saveImageToInternalStorage(Context context, Bitmap bitmap) { suspend fun saveImageToInternalStorage( imageUri: Uri ): HashMap&lt;String, String&gt;?</ID>
      <ID>LongMethod:SubmitMeasureFragment.kt$SubmitMeasureFragment$private fun List&lt;JobItemEstimateDTO&gt;.toMeasureItems(): List&lt;ExpandableGroup&gt;</ID>
      <ID>LongParameterList:ActivityDao.kt$ActivityDao$( ACT_ID: Long, ACT_TYPE_ID: Long?, APPROVAL_ID: Long?, CONTENT_ID: Long?, ACT_NAME: String?, DESCRIPTION: String? )</ID>
      <ID>LongParameterList:CardItem.kt$CardItem$( activity: FragmentActivity?, drive: String, selectedLocationPoint: Point, view: View, workViewModel: WorkViewModel, estimate: JobItemEstimateDTO, job: JobDTO )</ID>
      <ID>LongParameterList:CardItem.kt$CardItem$( val activity: FragmentActivity?, val desc: String, val qty: String, val rate: String, val estimateId: String, val workViewModel: WorkViewModel, val jobItemEstimate: JobItemEstimateDTO, val job: JobDTO, val myLocation: LocationModel?, )</ID>
      <ID>LongParameterList:CardMeasureItem.kt$CardMeasureItem$( val activity: FragmentActivity?, val itemMeasureId: String, val qty: String, val rate: String, val text: String, val measureViewModel: MeasureViewModel, var uiScope: UiLifecycleScope )</ID>
      <ID>LongParameterList:CreateFragment.kt$CreateFragment$( contractID: String?, projectID: String?, useR: Int?, newJobItemEstimatesList: ArrayList&lt;JobItemEstimateDTO&gt;, jobItemMeasureArrayList: ArrayList&lt;JobItemMeasureDTO&gt;, jobItemSectionArrayList: ArrayList&lt;JobSectionDTO&gt;,
          description: String? )
      </ID>
      <ID>LongParameterList:DeferredLocationValidation.kt$DeferredLocationViewModel$( locationResult: XIResult&lt;LocationValidation&gt;, job: JobDTO, uncheckedEstimate: JobItemEstimateDTO, uncheckedPhoto: JobItemEstimatesPhotoDTO, estIndex: Int, phIndex: Int )</ID>
      <ID>LongParameterList:DeferredLocationValidation.kt$DeferredLocationViewModel$( routeSectionResponse: XIResult.Error, uncheckedPhoto: JobItemEstimatesPhotoDTO, uncheckedEstimate: JobItemEstimateDTO, locationJob: JobDTO, estIndex: Int, phIndex: Int )</ID>
      <ID>LongParameterList:DeferredLocationValidation.kt$DeferredLocationViewModel$( routeSectionResponse: XIResult&lt;LocationValidation&gt;, uncheckedPhoto: JobItemEstimatesPhotoDTO, uncheckedEstimate: JobItemEstimateDTO, locationJob: JobDTO, estIndex: Int, phIndex: Int )</ID>
      <ID>LongParameterList:EntitiesDao.kt$EntitiesDao$( trackRouteId: String?, actionable: Int, activityId: Int, currentRouteId: Int, data: String?, description: String?, entities: ArrayList&lt;ToDoListEntityDTO&gt;, entityName: String?, location: String?, primaryKeyValues: ArrayList&lt;PrimaryKeyValueDTO&gt;,
          recordVersion: Int, jobId: String? )
      </ID>
      <ID>LongParameterList:EstimateWorkDao.kt$EstimateWorkDao$( worksId: String?, estimateId: String?, recordVersion: Int, recordSynchStateId: Int, actId: Int, trackRouteId: String? )</ID>
      <ID>LongParameterList:JobCreationDataRepository.kt$JobCreationDataRepository$( newJobId: String, startKM: Double, endKM: Double, sectionId: String, newJobItemEstimatesList: ArrayList&lt;JobItemEstimateDTO&gt;, jobItemSectionArrayList: ArrayList&lt;JobSectionDTO&gt; )</ID>
      <ID>LongParameterList:JobDao.kt$JobDao$( newJobId: String, startKM: Double, endKM: Double, sectionId: String, newJobItemEstimatesList: ArrayList&lt;JobItemEstimateDTO&gt;, jobItemSectionArrayList: ArrayList&lt;JobSectionDTO&gt; )</ID>
      <ID>LongParameterList:JobDaoTemp.kt$JobDaoTemp$( newjobId: String, startKM: Double, endKM: Double, sectionId: String, newJobItemEstimatesList: ArrayList&lt;JobItemEstimateDTO&gt;, jobItemSectionArrayList: ArrayList&lt;JobSectionDTO&gt; )</ID>
      <ID>LongParameterList:JobEstimateWorksDTO.kt$JobEstimateWorksDTO$( @SerializedName("ActId") var actId: Int, @SerializedName("EstimateId") var estimateId: String?, @SerializedName("MobileJobEstimateWorksPhotos") var jobEstimateWorksPhotos: ArrayList&lt;JobEstimateWorksPhotoDTO&gt; =
          ArrayList(), @SerializedName("RecordSynchStateId") var recordSynchStateId: Int, @SerializedName("RecordVersion") var recordVersion: Int, @SerializedName("TrackRouteId") var trackRouteId: String, @SerializedName("WorksId") @PrimaryKey var worksId: String )
      </ID>
      <ID>LongParameterList:JobSectionDTO.kt$JobSectionDTO$( @SerializedName("JobSectionId") @PrimaryKey var jobSectionId: String, @SerializedName("ProjectSectionId") var projectSectionId: String?, @SerializedName("JobId") var jobId: String?, @SerializedName("StartKm") val startKm: Double,
          @SerializedName("EndKm") val endKm: Double, @SerializedName("RecordSynchStateId") val recordSynchStateId: Int, @SerializedName("RecordVersion") val recordVersion: Int )
      </ID>
      <ID>LongParameterList:JobSectionDao.kt$JobSectionDao$( jobSectionId: String?, projectSectionId: String?, jobId: String?, startKm: Double, endKm: Double, recordVersion: Int, recordSynchStateId: Int )</ID>
      <ID>LongParameterList:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$( userId: String, jobId: String, jimNo: String?, contractVoId: String?, mSures: ArrayList&lt;JobItemMeasureDTO&gt;, activity: FragmentActivity, itemMeasureJob: JobDTO )</ID>
      <ID>LongParameterList:MeasureViewModel.kt$MeasureViewModel$( userId: String, jobId: String, jimNo: String?, contractVoId: String?, mSures: ArrayList&lt;JobItemMeasureDTO&gt;, activity: FragmentActivity, itemMeasureJob: JobDTO )</ID>
    <ID>LongParameterList:ProjectDao.kt$ProjectDao$( projectId: String, descr: String?, endDate: String?, items: ArrayList&lt;ProjectItemDTO&gt;?, projectCode: String?, projectMinus: String?, projectPlus: String?, projectSections: ArrayList&lt;ProjectSectionDTO&gt;?, voItems: ArrayList&lt;VoItemDTO&gt;?, contractId: String? )</ID>
    <ID>LongParameterList:ProjectItemDao.kt$ProjectItemDao$( itemId: String, itemCode: String?, descr: String?, itemSections: ArrayList&lt;ItemSectionDTO&gt; = arrayListOf(), tenderRate: Double, uom: String?, workflowId: Int?, sectionItemId: String?, quantity: Double, estimateId: String?, projectId: String )</ID>
    <ID>LongParameterList:ProjectSectionDao.kt$ProjectSectionDao$( sectionId: String, route: String, section: String, startKm: Double?, endKm: Double?, direction: String?, projectId: String )</ID>
    <ID>LongParameterList:SectionPointDao.kt$SectionPointDao$( direction: String, linearId: String, pointLocation: Double, sectionId: Int, projectId: String?, jobId: String? )</ID>
    <ID>LongParameterList:SubmitMeasureFragment.kt$SubmitMeasureFragment$( userDTO: UserDTO, jobId: String, itemMeasureJob: JobDTO, contractVoId: String, mSures: ArrayList&lt;JobItemMeasureDTO&gt;, it: FragmentActivity )</ID>
      <ID>LongParameterList:VoItemDao.kt$VoItemDao$( projectVoId: String, itemCode: String?, voDescr: String?, descr: String?, uom: String?, rate: Double?, projectItemId: String?, contractVoId: String?, contractVoItemId: String?, projectId: String )</ID>
      <ID>LongParameterList:WorkFlowRouteDao.kt$WorkFlowRouteDao$( routeId: Long, actId: Long, nextRouteId: Long, failRouteId: Long, errorRouteId: Long, canStart: Long, workflowId: Long? )</ID>
      <ID>LongParameterList:WorkflowJobDTO.kt$WorkflowJobDTO$( @PrimaryKey @SerializedName("JobId") var jobId: String? = null, @SerializedName("ActId") var actId: Int = 0, @SerializedName("TrackRouteId") var trackRouteId: String? = null, @SerializedName("JiNo") var jiNo: String? = null,
          @SerializedName("WorkflowItemEstimates") val workflowItemEstimates: ArrayList&lt;WorkflowItemEstimateDTO&gt; = ArrayList(), @SerializedName("WorkflowItemMeasures") val workflowItemMeasures: ArrayList&lt;WorkflowItemMeasureDTO&gt; = ArrayList(), @SerializedName("WorkflowJobSections") val
          workflowJobSections: ArrayList&lt;JobSectionDTO&gt; = ArrayList() )
      </ID>
      <ID>LongParameterList:WorkflowJobSectionDTO.kt$WorkflowJobSectionDTO$( @SerializedName("JobId") var jobId: String? = null, @SerializedName("JobSectionId") val jobSectionId: String? = null, @SerializedName("ProjectSectionId") val projectSectionId: String? = null,
          @SerializedName("RecordVersion") val recordVersion: Int = 0, @SerializedName("RecordSynchStateId") val recordSynchStateId: Int = 0, @SerializedName("StartKm") val startKm: Double = 0.0, @SerializedName("EndKm") val endKm: Double = 0.0 )
      </ID>
      <ID>MagicNumber:AppExecutor.kt$AppExecutor$3</ID>
      <ID>MagicNumber:ApproveJobsFragment.kt$ApproveJobsFragment$15</ID>
      <ID>MagicNumber:ApproveMeasureFragment.kt$ApproveMeasureFragment$15</ID>
      <ID>MagicNumber:ApproveMeasureViewModel.kt$ApproveMeasureViewModel$10</ID>
      <ID>MagicNumber:ApproveMeasureViewModel.kt$ApproveMeasureViewModel$4</ID>
      <ID>MagicNumber:ApproveMeasureViewModel.kt$ApproveMeasureViewModel$5</ID>
      <ID>MagicNumber:BaseConnectionApi.kt$BaseConnectionApi.Companion$10</ID>
      <ID>MagicNumber:BaseConnectionApi.kt$BaseConnectionApi.Companion$10000</ID>
      <ID>MagicNumber:BaseConnectionApi.kt$BaseConnectionApi.Companion$5</ID>
      <ID>MagicNumber:BaseFragment.kt$BaseFragment$3000</ID>
      <ID>MagicNumber:CarouselFragment.kt$CarouselFragment$4</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1024</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$120</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1200</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1280</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1392</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1536</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$160</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1600</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1680</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$1944</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$2008</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$2048</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$2240</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$240</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$2448</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$2580</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$3</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$30</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$3032</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$320</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$3264</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$40</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$480</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$500</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$60</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$600</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$640</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$768</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$80</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$800</ID>
      <ID>MagicNumber:CompressionProvider.kt$CompressionProvider$960</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$10</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$16</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$3</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$4</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$5</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$6</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$7</ID>
      <ID>MagicNumber:DataConversion.kt$DataConversion$8</ID>
      <ID>MagicNumber:DateUtil.kt$DateUtil$8</ID>
      <ID>MagicNumber:DeferredLocationValidation.kt$DeferredLocationViewModel$8</ID>
      <ID>MagicNumber:EstimatesItem.kt$EstimatesItem$9</ID>
      <ID>MagicNumber:ExpandableHeaderMeasureItem.kt$ExpandableHeaderMeasureItem$9</ID>
      <ID>MagicNumber:FileUriUtils.kt$FileUriUtils$1024</ID>
      <ID>MagicNumber:FileUriUtils.kt$FileUriUtils$4</ID>
      <ID>MagicNumber:ImagePicker.kt$ImagePicker.Builder$1024L</ID>
      <ID>MagicNumber:ImageUtil.kt$ImageUtil$100</ID>
      <ID>MagicNumber:ImageUtil.kt$ImageUtil$1024</ID>
      <ID>MagicNumber:ImageUtil.kt$ImageUtil$16</ID>
      <ID>MagicNumber:ImageUtil.kt$ImageUtil$4</ID>
      <ID>MagicNumber:JobInfoFragment.kt$JobInfoFragment$3</ID>
      <ID>MagicNumber:JobUtils.kt$JobUtils$0.01</ID>
      <ID>MagicNumber:LiveDataLocation.kt$LocationModel$6</ID>
      <ID>MagicNumber:MeasureApprovalFragment.kt$MeasureApprovalFragment$10</ID>
      <ID>MagicNumber:MeasureFragment.kt$MeasureFragment$15</ID>
      <ID>MagicNumber:MeasureViewModel.kt$MeasureViewModel$16</ID>
      <ID>MagicNumber:MeasureViewModel.kt$MeasureViewModel$4</ID>
      <ID>MagicNumber:MeasureViewModel.kt$MeasureViewModel$5</ID>
      <ID>MagicNumber:PhotoQuality.kt$PhotoQuality.LOW$8</ID>
      <ID>MagicNumber:PhotoQuality.kt$PhotoQuality.MEDIUM$6</ID>
    <ID>MagicNumber:PhotoQuality.kt$PhotoQuality.THUMB$16</ID>
    <ID>MagicNumber:PhotoQuality.kt$PhotoQuality.TINY$24</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$100</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$1024</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$16</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$180</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$270</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$4</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$5</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$612.0f</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$816.0f</ID>
    <ID>MagicNumber:PhotoUtil.kt$PhotoUtil$90</ID>
    <ID>MagicNumber:ProgressButtonExtensions.kt$100</ID>
    <ID>MagicNumber:ShimmerUtils.kt$ShimmerUtils$0.6f</ID>
    <ID>MagicNumber:UIExtensions.kt$3</ID>
    <ID>MagicNumber:UIExtensions.kt$4</ID>
    <ID>MagicNumber:UIExtensions.kt$5</ID>
      <ID>MagicNumber:Utils.kt$1000L</ID>
      <ID>MagicNumber:WorkFragment.kt$WorkFragment$15</ID>
      <ID>MagicNumber:WorkFragment.kt$WorkFragment$20</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$15</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$16</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$17</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$18</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$19</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$3</ID>
      <ID>MagicNumber:WorkStateItem.kt$WorkStateItem$4</ID>
      <ID>MaxLineLength:CapturedPictureRepository.kt$CapturedPictureRepository$private</ID>
      <ID>MaxLineLength:CapturedPictureRepository.kt$CapturedPictureRepository$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:EntitiesDao.kt$EntitiesDao$"INSERT INTO TODO_ENTITY_TABLE (trackRouteIdString, actionable, activityId, currentRouteId, data, description, entities, entityName, location, primaryKeyValues, recordVersion, jobId) "</ID>
      <ID>MaxLineLength:EntitiesDao.kt$EntitiesDao$"VALUES (:trackRouteId, :actionable, :activityId, :currentRouteId, :data , :description, :entities, :entityName, :location, "</ID>
      <ID>MaxLineLength:GalleryProvider.kt$GalleryProvider$// Environment.getExternalStorageDirectory().path + "/Pictures/" //+ folderName + "/"context: Context, folderName: String</ID>
      <ID>MaxLineLength:GalleryProvider.kt$GalleryProvider$// Finds the first image in the specified folder and uses it to open a the devices native gallery app with all images in that folder.</ID>
      <ID>MaxLineLength:GalleryProvider.kt$GalleryProvider$val filePath = "content://za.co.xisystems.itismaintenance.qa.provider/root/Android/data/za.co.xisystems.itismaintenance.qa/files/Pictures/"</ID>
      <ID>MaxLineLength:JobCreationDataRepository.kt$JobCreationDataRepository$suspend</ID>
      <ID>MaxLineLength:JobDaoTemp.kt$JobDaoTemp$@Query("UPDATE JOB_TABLE_TEMP SET sectionId =:sectionId ,startKm =:startKM , endKm =:endKM ,JobItemEstimates =:newJobItemEstimatesList, jobSections =:jobItemSectionArrayList WHERE jobId = :newjobId ")</ID>
      <ID>MaxLineLength:JobItemEstimateDao.kt$JobItemEstimateDao$@Query("SELECT * FROM JOB_ITEM_ESTIMATE WHERE actId = :actId AND measureActId =:activityId ORDER BY measureActId ASC ")</ID>
      <ID>MaxLineLength:JobItemEstimateDao.kt$JobItemEstimateDao$@Query("SELECT * FROM JOB_ITEM_ESTIMATE WHERE actId = :actId and measureActId IN (:activityId2,:activityId3) ORDER BY measureActId DESC ")</ID>
      <ID>MaxLineLength:JobItemEstimateDao.kt$JobItemEstimateDao$@Query("UPDATE JOB_ITEM_ESTIMATE SET TrackRouteId =:trackRouteId, ActId =:actId AND measureActId =:actId WHERE estimateId = :estimateId")</ID>
      <ID>MaxLineLength:JobItemMeasureDao.kt$JobItemMeasureDao$@Query("SELECT * FROM JOB_ITEM_MEASURE WHERE jobId = :jobId AND actId = :actId AND deleted = 0 ORDER BY jimNo, projectItemId ASC")</ID>
      <ID>MaxLineLength:JobItemMeasureDao.kt$JobItemMeasureDao$@Query("UPDATE JOB_ITEM_MEASURE SET jobItemMeasurePhotos =:jobItemMeasurePhotoList WHERE itemMeasureId = :itemMeasureId")</ID>
      <ID>MaxLineLength:JobItemMeasureDao.kt$JobItemMeasureDao$@Query("UPDATE JOB_ITEM_MEASURE SET trackRouteId =:trackRouteId, ActId =:actId , measureGroupId =:measureGroupId WHERE itemMeasureId = :itemMeasureId")</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// // @Query("INSERT INTO JOB_ITEM_MEASURE_TEMP (itemMeasureId, jobId, projectItemId, qty, lineRate, startKm, endKm, jobDirectionId, recordVersion, recordSynchStateId, estimateId, projectVoId, cpa, lineAmount, measureDate, selectedItemUom ) VALUES (
          :itemMeasureId, :jobId, :projectItemId, :qty, :lineRate, :startKm, :endKm, :jobDirectionId, :recordVersion, :recordSynchStateId, :estimateId, :projectVoId, :cpa, :lineAmount, :measureDate, :selectedItemUom )")
      </ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// // fun insertJobItemMeasure2(itemMeasureId: String, jobId: String, projectItemId: String, qty: Double, lineRate: Double, startKm: Double, endKm: Double, jobDirectionId: Int,</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// // items: ArrayList&lt;ItemDTO&gt;?, projectCode: String?, projectMinus: String?, projectPlus: String?,</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// // projectSections: ArrayList&lt;ProjectSectionDTO&gt;?, voItems: ArrayList&lt;VoItemDTO&gt;?, contractId : String?) : Long</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// // recordVersion: Int, recordSynchStateId: Int, estimateId: String, projectVoId: String, cpa: Int, lineAmount: Double, measureDate: String, selectedItemUom: String): Long</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// @Query("UPDATE JOB_ITEM_MEASURE_TEMP SET jobItemMeasurePhotos =:jobItemMeasurePhotoList WHERE itemMeasureId = :itemMeasureId")</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// @Query("UPDATE JOB_ITEM_MEASURE_TEMP SET trackRouteId =:trackRouteId, ActId =:actId , measureGroupId =:measureGroupId WHERE itemMeasureId = :itemMeasureId")</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// fun getJobItemMeasuresForJobIdAndEstimateId( jobId: String?, estimateId: String ): LiveData&lt;List&lt;JobItemMeasureDTOTemp&gt;&gt;</ID>
      <ID>MaxLineLength:JobItemMeasureDao_Temp.kt$// fun updateWorkflowJobItemMeasure(itemMeasureId: String?, trackRouteId: String?, actId: Int, measureGroupId: String?)</ID>
      <ID>MaxLineLength:JobSectionDao.kt$JobSectionDao$@Query("SELECT EXISTS(SELECT * FROM JOB_SECTION_TABLE WHERE jobId = :jobId AND projectSectionId = :projectSectionId)")</ID>
      <ID>MaxLineLength:JobSectionDao.kt$JobSectionDao$@Query("UPDATE JOB_SECTION_TABLE SET jobSectionId =:jobSectionId,projectSectionId =:projectSectionId,jobId =:jobId,startKm =:startKm,endKm =:endKm, recordVersion =:recordVersion , recordSynchStateId =:recordSynchStateId WHERE jobSectionId =
          :jobSectionId")
      </ID>
      <ID>MaxLineLength:JobsPagingSource.kt$JobsPagingSource$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:LookupDao.kt$LookupDao$// @Query("SELECT * FROM LOOKUP_TABLE LEFT JOIN WORKFLOW_TABLE ON WORKFLOW_TABLE.workflowId = LOOKUP_TABLE.workflowId = :itemWorkflowId")</ID>
      <ID>MaxLineLength:LookupOptionDao.kt$LookupOptionDao$// @Query("INSERT INTO LOOKUP_OPTION_TABLE (lId,valueMember,displayMember,contextMember,lookupName) VALUES (:lId,:valueMember,:displayMember,:contextMember,:lookupName)")</ID>
      <ID>MaxLineLength:LookupOptionDao.kt$LookupOptionDao$// @Query("SELECT * FROM LOOKUP_OPTION_TABLE LEFT JOIN WORKFLOW_TABLE ON WORKFLOW_TABLE.workflowId = LOOKUP_OPTION_TABLE.workflowId = :itemWorkflowId")</ID>
      <ID>MaxLineLength:LookupOptionDao.kt$LookupOptionDao$// fun insertLookupOption(lId: Int, valueMember: String?, displayMember: String?,contextMember: String?, lookupName: String)</ID>
      <ID>MaxLineLength:LookupOptionDao.kt$LookupOptionDao$@Query("INSERT INTO LOOKUP_OPTION_TABLE (valueMember,displayMember,contextMember,lookupName) VALUES (:valueMember,:displayMember,:contextMember,:lookupName)")</ID>
      <ID>MaxLineLength:MeasureApprovalDataRepository.kt$MeasureApprovalDataRepository$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:MeasureViewModel.kt$MeasureViewModel$suspend</ID>
      <ID>MaxLineLength:OfflineDataRepository.kt$OfflineDataRepository$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:PrimaryKeyValueDao.kt$PrimaryKeyValueDao$@Query("INSERT INTO PRIMARY_KEY_VALUE_TABLE (primary_key, valueString, trackRouteId, activityId) VALUES (:primary_key, :value, :trackRouteId, :activityId)")</ID>
      <ID>MaxLineLength:ProjectDao.kt$ProjectDao$@Query("INSERT INTO PROJECT_TABLE (projectId,descr, endDate, items, projectCode, projectMinus, projectPlus,projectSections, voItems, contractId) VALUES (:projectId,:descr, :endDate, :items, :projectCode, :projectMinus, :projectPlus, :projectSections,
          :voItems, :contractId)")
      </ID>
      <ID>MaxLineLength:ProjectDao.kt$ProjectDao$@Query("SELECT projectId, projectCode, descr FROM PROJECT_TABLE WHERE contractId = :contractId ORDER BY projectCode")</ID>
      <ID>MaxLineLength:SafeApiRequest.kt$SafeApiRequest$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:SectionItemDao.kt$SectionItemDao$@Query("INSERT INTO SECTION_ITEM_TABLE (sectionItemId, itemCode, description)VALUES(:sectionItemId, :itemCode,:description)")</ID>
      <ID>MaxLineLength:SectionItemDao.kt$SectionItemDao$@Query("SELECT * FROM SECTION_ITEM_TABLE WHERE sectionItemId IN (SELECT DISTINCT sectionItemId FROM PROJECT_ITEM_TABLE WHERE projectId = :projectId) ORDER BY itemCode ASC")</ID>
      <ID>MaxLineLength:SectionPointDao.kt$SectionPointDao$@Query("INSERT INTO SECTION_POINT_TABLE (direction, linearId ,pointLocation,sectionId ,projectId , jobId ) VALUES (:direction ,:linearId ,:pointLocation ,:sectionId ,:projectId ,:jobId)")</ID>
      <ID>MaxLineLength:SectionPointDao.kt$SectionPointDao$@Query("SELECT * FROM SECTION_POINT_TABLE WHERE sectionId = :sectionId AND projectId LIKE :projectId AND jobId LIKE :jobId")</ID>
      <ID>MaxLineLength:UserRepository.kt$UserRepository$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>MaxLineLength:VoItemDao.kt$VoItemDao$@Query("INSERT INTO TABLE_JOB_VO_ITEM (projectVoId,itemCode,voDescr,descr,uom,rate,projectItemId,contractVoId, contractVoItemId, projectId) VALUES (:projectVoId,:itemCode, :voDescr,:descr, :uom,
          :rate,:projectItemId,:contractVoId,:contractVoItemId,:projectId )")
      </ID>
      <ID>MaxLineLength:WorkDataRepository.kt$WorkDataRepository$private</ID>
      <ID>MaxLineLength:WorkFlowDao.kt$WorkFlowDao$// @Query("INSERT INTO WORKFLOW_TABLE (dateCreated,errorRouteId, revNo, startRouteId, userId, wfHeaderId, workFlowRoute, workflowId) VALUES (:dateCreated,:errorRouteId, :revNo, :startRouteId, :userId, :wfHeaderId, :workFlowRoute, :workflowId)")</ID>
      <ID>MaxLineLength:WorkFlowDao.kt$WorkFlowDao$// fun insertWorkFlow(dateCreated: String,errorRouteId: Long, revNo: Long, startRouteId: Long, userId: Long, wfHeaderId: Long, workFlowRoute: ArrayList&lt;WorkFlowRouteDTO&gt;?, workflowId: Long)</ID>
      <ID>MaxLineLength:WorkFlowRouteDao.kt$WorkFlowRouteDao$@Query("INSERT INTO WORKFLOW_ROUTE_TABLE ( routeId, actId, nextRouteId, failRouteId, errorRouteId, canStart, workflowId ) VALUES (:routeId, :actId, :nextRouteId, :failRouteId, :errorRouteId, :canStart, :workflowId)")</ID>
      <ID>MaxLineLength:WorkFlowRouteDao.kt$WorkFlowRouteDao$@Query("SELECT * FROM WORKFLOW_ROUTE_TABLE LEFT JOIN WORKFLOW_TABLE ON WORKFLOW_TABLE.workflowId = WORKFLOW_ROUTE_TABLE.workflowId = :itemWorkflowId")</ID>
      <ID>MemberNameEqualsClassName:AppExecutor.kt$AppExecutor$fun AppExecutor( diskIO: Executor?, mainThread: Executor?, networkIO: Executor? ): AppExecutor?</ID>
      <ID>NestedBlockDepth:FileUriUtils.kt$FileUriUtils$@SuppressLint("ObsoleteSdkInt") private fun getPathFromLocalUri(context: Context, uri: Uri): String?</ID>
      <ID>NestedBlockDepth:JobApprovalDataRepository.kt$JobApprovalDataRepository$private fun processWorkflowUpdates(job: WorkflowJobDTO)</ID>
      <ID>NestedBlockDepth:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$private suspend fun persistWorkflowJob( job: WorkflowJobDTO, pushMeasures: Boolean = false )</ID>
      <ID>NestedBlockDepth:OfflineDataRepository.kt$OfflineDataRepository$@Transaction private fun updateProjectItems( distinctItems: List&lt;ProjectItemDTO&gt;, project: ProjectDTO )</ID>
      <ID>NestedBlockDepth:OfflineDataRepository.kt$OfflineDataRepository$@Transaction private suspend fun saveContracts(contracts: List&lt;ContractDTO&gt;)</ID>
      <ID>NestedBlockDepth:OfflineDataRepository.kt$OfflineDataRepository$@Transaction private suspend fun saveJob(jobDTO: JobDTO?)</ID>
      <ID>NestedBlockDepth:OfflineDataRepository.kt$OfflineDataRepository$private fun saveSectionsItems(sections: ArrayList&lt;String&gt;?)</ID>
      <ID>NestedBlockDepth:RegisterPinActivity.kt$RegisterPinActivity$override fun onRequestPermissionsResult( requestCode: Int, permissions: Array&lt;out String&gt;, grantResults: IntArray )</ID>
      <ID>NestedBlockDepth:ResetPinActivity.kt$ResetPinActivity$override fun onRequestPermissionsResult( requestCode: Int, permissions: Array&lt;out String&gt;, grantResults: IntArray )</ID>
      <ID>NewLineAtEndOfFile:Image.kt$za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.newpac.Image.kt</ID>
      <ID>NewLineAtEndOfFile:ImageAdapter.kt$za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.newpac.ImageAdapter.kt</ID>
      <ID>PackageNaming:AbstractIntent.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.intents</ID>
      <ID>PackageNaming:Actions.kt$package za.co.xisystems.itis_rrm.media</ID>
      <ID>PackageNaming:ActivityDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ActivityDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:ActivityIdConstants.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:ActivitySectionsResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:AddProjectFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.add_project_item</ID>
      <ID>PackageNaming:AddSnapCaptureToEstimateUseCase.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.usecases</ID>
      <ID>PackageNaming:All_IDs.kt$package za.co.xisystems.itis_rrm.internal</ID>
      <ID>PackageNaming:Animations.kt$package za.co.xisystems.itis_rrm.data._commons</ID>
      <ID>PackageNaming:AppDatabase.kt$package za.co.xisystems.itis_rrm.data.localDB</ID>
      <ID>PackageNaming:AppExecutor.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:AppExecutor.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates</ID>
      <ID>PackageNaming:ApproveJobItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvejobs.approve_job_item</ID>
      <ID>PackageNaming:ApproveJobsFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvejobs</ID>
      <ID>PackageNaming:ApproveJobsViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvejobs</ID>
      <ID>PackageNaming:ApproveJobsViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvejobs</ID>
      <ID>PackageNaming:ApproveMeasureFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure</ID>
      <ID>PackageNaming:ApproveMeasureItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure.approveMeasure_Item</ID>
      <ID>PackageNaming:ApproveMeasureViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure</ID>
      <ID>PackageNaming:ApproveMeasureViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure</ID>
      <ID>PackageNaming:ArmouryException.kt$package za.co.xisystems.itis_rrm.forge</ID>
      <ID>PackageNaming:ArmouryScope.kt$package za.co.xisystems.itis_rrm.forge</ID>
      <ID>PackageNaming:AuthListener.kt$package za.co.xisystems.itis_rrm.ui.auth</ID>
      <ID>PackageNaming:AuthResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:AuthViewModel.kt$package za.co.xisystems.itis_rrm.ui.auth.model</ID>
      <ID>PackageNaming:AuthViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.auth.model</ID>
      <ID>PackageNaming:BaseActivity.kt$package za.co.xisystems.itis_rrm.ui.base</ID>
      <ID>PackageNaming:BaseConnectionApi.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:BaseFragment.kt$package za.co.xisystems.itis_rrm.base</ID>
      <ID>PackageNaming:BaseProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.provider</ID>
      <ID>PackageNaming:BaseViewModel.kt$package za.co.xisystems.itis_rrm.base</ID>
      <ID>PackageNaming:BoundsOffsetDecoration.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:CameraProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.provider</ID>
      <ID>PackageNaming:CaptureGalleryFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture</ID>
      <ID>PackageNaming:CaptureItemDetailFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture</ID>
      <ID>PackageNaming:CaptureItemMeasurePhotoFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure.submit_measure</ID>
      <ID>PackageNaming:CaptureMapFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture</ID>
      <ID>PackageNaming:CapturePagingFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture</ID>
      <ID>PackageNaming:CaptureViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture</ID>
      <ID>PackageNaming:CaptureViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture</ID>
      <ID>PackageNaming:CaptureWorkFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.capture_work</ID>
      <ID>PackageNaming:CapturedPictureRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
      <ID>PackageNaming:CardItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.estimate_work_item</ID>
      <ID>PackageNaming:CardMeasureItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure.submit_measure</ID>
      <ID>PackageNaming:CarouselAdapter.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:CarouselExtensions.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:CarouselFragment.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:CarouselViewModel.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:CarouselViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:ChildLookupDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ColorToast.kt$package za.co.xisystems.itis_rrm.custom.notifications</ID>
      <ID>PackageNaming:CompressionProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.provider</ID>
      <ID>PackageNaming:Constants.kt$package za.co.xisystems.itis_rrm.constants</ID>
      <ID>PackageNaming:Constants.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils</ID>
      <ID>PackageNaming:ContractDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ContractDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:ContractSelector.kt$package za.co.xisystems.itis_rrm.domain</ID>
      <ID>PackageNaming:ContractSelectorView.kt$package za.co.xisystems.itis_rrm.data.localDB.views</ID>
      <ID>PackageNaming:ContractsResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
    <ID>PackageNaming:Converters.kt$package za.co.xisystems.itis_rrm.utils</ID>
    <ID>PackageNaming:Coroutines.kt$package za.co.xisystems.itis_rrm.utils</ID>
    <ID>PackageNaming:CorrectionsFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.corrections</ID>
      <ID>PackageNaming:CorrectionsViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.corrections</ID>
      <ID>PackageNaming:CorrectionsViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.corrections</ID>
      <ID>PackageNaming:CreateFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.create</ID>
      <ID>PackageNaming:CreateViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.create</ID>
      <ID>PackageNaming:CreateViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.create</ID>
      <ID>PackageNaming:CropProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.provider</ID>
      <ID>PackageNaming:DataConversion.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:DateDeserializer.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:DateUtil.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:DatetimeConverters.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:DebouncingSearchListener.kt$package za.co.xisystems.itis_rrm.searches</ID>
      <ID>PackageNaming:DecimalSignedDigitsKeyListener.kt$package za.co.xisystems.itis_rrm.ui.extensions</ID>
      <ID>PackageNaming:DeferredLocationRepository.kt$package za.co.xisystems.itis_rrm.services</ID>
      <ID>PackageNaming:DeferredLocationValidation.kt$package za.co.xisystems.itis_rrm.services</ID>
      <ID>PackageNaming:DeferredLocationViewModelFactory.kt$package za.co.xisystems.itis_rrm.services</ID>
      <ID>PackageNaming:Delegates.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:DeviceCleanup.kt$package za.co.xisystems.itis_rrm.utils.interfaces</ID>
      <ID>PackageNaming:DialogHelper.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:DialogUtils.kt$package za.co.xisystems.itis_rrm.data._commons.views</ID>
      <ID>PackageNaming:DismissListener.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.listener</ID>
      <ID>PackageNaming:DispatcherProvider.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:EntitiesDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:EntityAction.kt$package za.co.xisystems.itis_rrm.utils.enums</ID>
      <ID>PackageNaming:ErrorResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:EstimateMeasureItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure.estimate_measure_item</ID>
      <ID>PackageNaming:EstimatePhotoFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates</ID>
      <ID>PackageNaming:EstimateWorkDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:EstimateWorkPhotoDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:EstimatesItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvejobs.view_job_info</ID>
      <ID>PackageNaming:Exceptions.kt$package za.co.xisystems.itis_rrm.custom.errors</ID>
      <ID>PackageNaming:ExifDataCopier.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:Exiter.kt$package za.co.xisystems.itis_rrm.ui.auth</ID>
      <ID>PackageNaming:ExpandableHeaderMeasureItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure.submit_measure</ID>
      <ID>PackageNaming:ExpandableHeaderWorkItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.estimate_work_item</ID>
      <ID>PackageNaming:Extensions.kt$package za.co.xisystems.itis_rrm.extensions</ID>
      <ID>PackageNaming:Extensions.kt$package za.co.xisystems.itis_rrm.media</ID>
      <ID>PackageNaming:FileOperations.kt$package za.co.xisystems.itis_rrm.media</ID>
      <ID>PackageNaming:FileUriUtils.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:FileUtil.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:FragmentExtensions.kt$package za.co.xisystems.itis_rrm.ui.extensions</ID>
      <ID>PackageNaming:GPSUtils.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:GalleryProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.provider</ID>
      <ID>PackageNaming:GenericSavedStateViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.base</ID>
      <ID>PackageNaming:GeoCodeSnapCaptureUseCase.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.usecases</ID>
      <ID>PackageNaming:GeocodeCaptureUseCase.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture.usecases</ID>
      <ID>PackageNaming:GoToFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.goto_work_location</ID>
      <ID>PackageNaming:GoToViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.goto_work_location</ID>
      <ID>PackageNaming:GoToViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.goto_work_location</ID>
      <ID>PackageNaming:GridGalleryViewModel.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:HeaderItem.kt$package za.co.xisystems.itis_rrm.ui.mainview._fragments</ID>
      <ID>PackageNaming:HealthCheckResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:HealthDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:HealthDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:HomeFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.home</ID>
      <ID>PackageNaming:HomeUIState.kt$package za.co.xisystems.itis_rrm.ui.mainview.home</ID>
      <ID>PackageNaming:HomeViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.home</ID>
      <ID>PackageNaming:HomeViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.home</ID>
      <ID>PackageNaming:IActivityProgressView.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.contracts</ID>
      <ID>PackageNaming:IBaseActivity.kt$package za.co.xisystems.itis_rrm.data._commons.views</ID>
    <ID>PackageNaming:IBaseFragment.kt$package za.co.xisystems.itis_rrm.data._commons.views</ID>
    <ID>PackageNaming:ICallBack.kt$package za.co.xisystems.itis_rrm.data._commons</ID>
    <ID>PackageNaming:ID_Provider.kt$package za.co.xisystems.itis_rrm.data.provider</ID>
      <ID>PackageNaming:IEstimateCalculator.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.contracts</ID>
      <ID>PackageNaming:IJobOfflineHelper.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.contracts</ID>
      <ID>PackageNaming:IJobSectionView.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.contracts</ID>
      <ID>PackageNaming:IJobSubmit.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils</ID>
      <ID>PackageNaming:INewJobEditEstimateIntent.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.intents</ID>
      <ID>PackageNaming:INewJobSelectItemIntent.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.intents</ID>
      <ID>PackageNaming:IProgressView.kt$package za.co.xisystems.itis_rrm.data._commons.views</ID>
      <ID>PackageNaming:IRefreshLookupData.kt$package za.co.xisystems.itis_rrm.utils.interfaces</ID>
      <ID>PackageNaming:IRefreshWorkflowItems.kt$package za.co.xisystems.itis_rrm.utils.interfaces</ID>
      <ID>PackageNaming:IdProviderImpl.kt$package za.co.xisystems.itis_rrm.internal</ID>
      <ID>PackageNaming:Image.kt$package za.co.xisystems.itis_rrm.media.models</ID>
      <ID>PackageNaming:Image.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.newpac</ID>
      <ID>PackageNaming:ImageAdapter.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.newpac</ID>
      <ID>PackageNaming:ImagePicker.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils</ID>
      <ID>PackageNaming:ImagePickerActivity.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils</ID>
      <ID>PackageNaming:ImagePickerFileProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils</ID>
      <ID>PackageNaming:ImageProvider.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.constant</ID>
      <ID>PackageNaming:ImageUtil.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:ImageViewExtension.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:IndefiniteSnackbar.kt$package za.co.xisystems.itis_rrm.custom.views</ID>
      <ID>PackageNaming:InfoClassDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:InfoClassDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:IntentUtils.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:ItemDTOTemp.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ItemDaoTemp.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:ItemSectionDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ItemSectionDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:ItemsResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:JobApprovalDataRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
    <ID>PackageNaming:JobCreationDataRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
    <ID>PackageNaming:JobDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:JobDTOTemp.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:JobDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:JobDaoTemp.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:JobDataController.kt$package za.co.xisystems.itis_rrm.data.localDB</ID>
    <ID>PackageNaming:JobEstimateWorksDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:JobEstimateWorksPhotoDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:JobInfoFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvejobs.view_job_info</ID>
    <ID>PackageNaming:JobItemEstimateDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:JobItemEstimateDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:JobItemEstimatePhotoDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:JobItemEstimateSize.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:JobItemEstimatesPhotoDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:JobItemMeasureDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:JobItemMeasureDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:JobItemMeasurePhotoDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:JobItemMeasurePhotoDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:JobPagingAdapter.kt$package za.co.xisystems.itis_rrm.data.pagers</ID>
      <ID>PackageNaming:JobResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:JobSectionDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:JobSectionDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:JobTypeDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:JobTypeEntityDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:JobUtils.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:JobsPagingSource.kt$package za.co.xisystems.itis_rrm.data.localDB.paging</ID>
      <ID>PackageNaming:LameCrashLibrary.kt$package za.co.xisystems.itis_rrm.logging</ID>
      <ID>PackageNaming:LinearHorizontalSpacingDecoration.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:LinkCaptureToJobItemEstimateUseCase.kt$package za.co.xisystems.itis_rrm.ui.mainview.capture.usecases</ID>
      <ID>PackageNaming:LiveDataLocation.kt$package za.co.xisystems.itis_rrm.services</ID>
      <ID>PackageNaming:LocationExceptions.kt$package za.co.xisystems.itis_rrm.services</ID>
      <ID>PackageNaming:LocationFragment.kt$package za.co.xisystems.itis_rrm.base</ID>
      <ID>PackageNaming:LocationViewModel.kt$package za.co.xisystems.itis_rrm.base</ID>
      <ID>PackageNaming:LocationViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
      <ID>PackageNaming:LoginActivity.kt$package za.co.xisystems.itis_rrm.ui.auth</ID>
      <ID>PackageNaming:LookupDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:LookupDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:LookupOptionDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:LookupOptionDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:LookupResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
    <ID>PackageNaming:MainActivity.kt$package za.co.xisystems.itis_rrm</ID>
    <ID>PackageNaming:MainActivityViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:MainActivityViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:MainApp.kt$package za.co.xisystems.itis_rrm</ID>
    <ID>PackageNaming:MeasureApprovalDataRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
      <ID>PackageNaming:MeasureApprovalFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure.measure_approval</ID>
      <ID>PackageNaming:MeasureCreationDataRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
      <ID>PackageNaming:MeasureFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure</ID>
      <ID>PackageNaming:MeasureGalleryFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure.measure_approval</ID>
      <ID>PackageNaming:MeasureGalleryUIState.kt$package za.co.xisystems.itis_rrm.ui.custom</ID>
      <ID>PackageNaming:MeasureHeaderItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure.estimate_measure_item</ID>
      <ID>PackageNaming:MeasureViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure</ID>
      <ID>PackageNaming:MeasureViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure</ID>
      <ID>PackageNaming:MeasurementTrack.kt$package za.co.xisystems.itis_rrm.domain</ID>
      <ID>PackageNaming:MeasurementsItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.approvemeasure.measure_approval</ID>
      <ID>PackageNaming:Media.kt$package za.co.xisystems.itis_rrm.media</ID>
      <ID>PackageNaming:Media.kt$package za.co.xisystems.itis_rrm.media.models</ID>
      <ID>PackageNaming:MediaViewModel.kt$package za.co.xisystems.itis_rrm.media</ID>
      <ID>PackageNaming:MotionToastExtenstions.kt$package za.co.xisystems.itis_rrm.ui.extensions</ID>
      <ID>PackageNaming:MyState.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils</ID>
      <ID>PackageNaming:NetworkConnectionInterceptor.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:OfflineDataRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
      <ID>PackageNaming:OfflineListener.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:OverlayableImageView.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
      <ID>PackageNaming:PermissionController.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:PermissionUtil.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.util</ID>
      <ID>PackageNaming:PhotoEstimateResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:PhotoInfo.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.models</ID>
    <ID>PackageNaming:PhotoMeasureResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
    <ID>PackageNaming:PhotoQuality.kt$package za.co.xisystems.itis_rrm.utils.enums</ID>
    <ID>PackageNaming:PhotoType.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.models</ID>
    <ID>PackageNaming:PhotoUtil.kt$package za.co.xisystems.itis_rrm.utils</ID>
    <ID>PackageNaming:PreferenceProvider.kt$package za.co.xisystems.itis_rrm.data.preferences</ID>
    <ID>PackageNaming:PrimaryKeyValueDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:PrimaryKeyValueDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:ProgressButtonExtensions.kt$package za.co.xisystems.itis_rrm.ui.extensions</ID>
    <ID>PackageNaming:ProjectDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:ProjectDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:ProjectItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.add_project_item</ID>
    <ID>PackageNaming:ProjectItemDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:ProjectItemDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:ProjectSectionDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:ProjectSectionDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:ProjectSelector.kt$package za.co.xisystems.itis_rrm.domain</ID>
      <ID>PackageNaming:ProminentLayoutManager.kt$package za.co.xisystems.itis_rrm.ui.snapcapture.gallery</ID>
    <ID>PackageNaming:QuantityUpdateResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
    <ID>PackageNaming:RRMGlideModule.kt$package za.co.xisystems.itis_rrm.utils</ID>
    <ID>PackageNaming:RegisterActivity.kt$package za.co.xisystems.itis_rrm.ui.auth</ID>
    <ID>PackageNaming:RegisterPinActivity.kt$package za.co.xisystems.itis_rrm.ui.auth</ID>
    <ID>PackageNaming:ResetPinActivity.kt$package za.co.xisystems.itis_rrm.ui.auth</ID>
      <ID>PackageNaming:ResultListener.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.edit_estimates.capture_utils.listener</ID>
    <ID>PackageNaming:RouteSectionPointResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
    <ID>PackageNaming:RrmJobRequest.kt$package za.co.xisystems.itis_rrm.data.network.request</ID>
    <ID>PackageNaming:SafeApiRequest.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:Sage.kt$package za.co.xisystems.itis_rrm.forge</ID>
    <ID>PackageNaming:SaveMeasurementResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
    <ID>PackageNaming:SavedJob.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils.models</ID>
      <ID>PackageNaming:Scribe.kt$package za.co.xisystems.itis_rrm.forge</ID>
    <ID>PackageNaming:ScrollAwareFABBehavior.kt$package za.co.xisystems.itis_rrm.ui.behaviors</ID>
      <ID>PackageNaming:SectionBorder.kt$package za.co.xisystems.itis_rrm.domain</ID>
    <ID>PackageNaming:SectionItem.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:SectionItemDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:SectionItemDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:SectionMarker.kt$package za.co.xisystems.itis_rrm.data.localDB.views</ID>
    <ID>PackageNaming:SectionPointDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:SectionPointDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:SectionProjectItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.select_item</ID>
    <ID>PackageNaming:SelectItemFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.select_item</ID>
    <ID>PackageNaming:ServiceUriUtil.kt$package za.co.xisystems.itis_rrm.utils</ID>
    <ID>PackageNaming:ServiceUtil.kt$package za.co.xisystems.itis_rrm.utils</ID>
    <ID>PackageNaming:SettingsActivity.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:SettingsFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:SettingsViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:SettingsViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:SharedViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:SharedViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.activities</ID>
    <ID>PackageNaming:ShimmerUtils.kt$package za.co.xisystems.itis_rrm.ui.extensions</ID>
      <ID>PackageNaming:SpinnerHelper.kt$package za.co.xisystems.itis_rrm.ui.mainview.create.new_job_utils</ID>
      <ID>PackageNaming:SqlLitUtils.kt$package za.co.xisystems.itis_rrm.data._commons.utils</ID>
      <ID>PackageNaming:SqlLitUtils.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:StringKeyValueDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:StringKeyValuePair.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:SubmitMeasureFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.estmeasure.submit_measure</ID>
      <ID>PackageNaming:ToDoGroupsDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ToDoGroupsDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:ToDoListEntityDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:ToDoListGroupsResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:ToastDuration.kt$package za.co.xisystems.itis_rrm.custom.notifications</ID>
      <ID>PackageNaming:ToastGravity.kt$package za.co.xisystems.itis_rrm.custom.notifications</ID>
      <ID>PackageNaming:ToastStyle.kt$package za.co.xisystems.itis_rrm.custom.notifications</ID>
      <ID>PackageNaming:ToastUtils.kt$package za.co.xisystems.itis_rrm.data._commons.views</ID>
      <ID>PackageNaming:UIExtensions.kt$package za.co.xisystems.itis_rrm.ui.extensions</ID>
      <ID>PackageNaming:UiLifecycleScope.kt$package za.co.xisystems.itis_rrm.ui.scopes</ID>
      <ID>PackageNaming:UnSubmittedFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.unsubmitted</ID>
      <ID>PackageNaming:UnSubmittedJobItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.unsubmitted.unsubmited_item</ID>
      <ID>PackageNaming:UnSubmittedViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.unsubmitted</ID>
      <ID>PackageNaming:UnSubmittedViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.unsubmitted</ID>
      <ID>PackageNaming:UnallocatedPhotoDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:UnallocatedPhotoDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:UploadImageResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:UploadWorksItemResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:UserDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:UserDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:UserRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
      <ID>PackageNaming:UserRoleDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:UserRoleDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:UserRoleResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:Utils.kt$package za.co.xisystems.itis_rrm.media</ID>
      <ID>PackageNaming:Utils.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:VerySafeApiRequest.kt$package za.co.xisystems.itis_rrm.data.network</ID>
      <ID>PackageNaming:ViewBinding.kt$package za.co.xisystems.itis_rrm.delegates</ID>
      <ID>PackageNaming:ViewModelAssistedFactory.kt$package za.co.xisystems.itis_rrm.ui.base</ID>
      <ID>PackageNaming:ViewUtils.kt$package za.co.xisystems.itis_rrm.utils</ID>
      <ID>PackageNaming:VoItemDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:VoItemDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:VoItemsRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
      <ID>PackageNaming:VoItemsResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:WfWorkStepDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:Wizard.kt$package za.co.xisystems.itis_rrm.forge</ID>
    <ID>PackageNaming:WorkDataRepository.kt$package za.co.xisystems.itis_rrm.data.repositories</ID>
    <ID>PackageNaming:WorkFlowDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:WorkFlowDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:WorkFlowRouteDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:WorkFlowRouteDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:WorkFlowsDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
    <ID>PackageNaming:WorkFragment.kt$package za.co.xisystems.itis_rrm.ui.mainview.work</ID>
    <ID>PackageNaming:WorkStateItem.kt$package za.co.xisystems.itis_rrm.ui.mainview.work.workstate_item</ID>
    <ID>PackageNaming:WorkStepDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
    <ID>PackageNaming:WorkViewModel.kt$package za.co.xisystems.itis_rrm.ui.mainview.work</ID>
    <ID>PackageNaming:WorkViewModelFactory.kt$package za.co.xisystems.itis_rrm.ui.mainview.work</ID>
      <ID>PackageNaming:WorkflowEstimateWorkDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:WorkflowItemEstimateDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:WorkflowItemMeasureDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:WorkflowJobDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:WorkflowJobSectionDTO.kt$package za.co.xisystems.itis_rrm.data.localDB.entities</ID>
      <ID>PackageNaming:WorkflowMoveResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:WorkflowResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:WorkflowUpdateResponse.kt$package za.co.xisystems.itis_rrm.data.network.responses</ID>
      <ID>PackageNaming:WorkflowsDao.kt$package za.co.xisystems.itis_rrm.data.localDB.dao</ID>
      <ID>PackageNaming:WorksGalleryUIState.kt$package za.co.xisystems.itis_rrm.ui.custom</ID>
      <ID>PackageNaming:XIArmoury.kt$package za.co.xisystems.itis_rrm.forge</ID>
      <ID>PackageNaming:XIErrorHandler.kt$package za.co.xisystems.itis_rrm.custom.errors</ID>
      <ID>PackageNaming:XIEvent.kt$package za.co.xisystems.itis_rrm.custom.events</ID>
      <ID>PackageNaming:XIResult.kt$package za.co.xisystems.itis_rrm.custom.results</ID>
      <ID>PrintStackTrace:CropProvider.kt$CropProvider$ex</ID>
      <ID>PrintStackTrace:FileUriUtils.kt$FileUriUtils$ex</ID>
      <ID>PrintStackTrace:FileUtil.kt$FileUtil$ex</ID>
      <ID>PrintStackTrace:ImageUtil.kt$ImageUtil$exception</ID>
      <ID>PrintStackTrace:PhotoUtil.kt$PhotoUtil$e</ID>
      <ID>ReturnCount:FileUriUtils.kt$FileUriUtils$@SuppressLint("ObsoleteSdkInt") private fun getPathFromLocalUri(context: Context, uri: Uri): String?</ID>
      <ID>ReturnCount:FileUtil.kt$FileUtil$ fun getTempFile(context: Context, uri: Uri): File?</ID>
      <ID>ReturnCount:JobItemEstimateDTO.kt$JobItemEstimateDTO$fun arePhotosGeoCoded(): Boolean</ID>
      <ID>ReturnCount:PermissionUtil.kt$PermissionUtil$ fun isPermissionInManifest(context: Context, permission: String): Boolean</ID>
      <ID>ReturnCount:Utils.kt$Utils$fun isQtyCompliant(quantity: String, activityRef: WeakReference&lt;Activity&gt;?): Boolean</ID>
      <ID>SerialVersionUIDInSerializableClass:JobTypeEntityDTO.kt$JobTypeEntityDTO : SerializableParcelable</ID>
      <ID>SerialVersionUIDInSerializableClass:PhotoEstimateResponse.kt$PhotoEstimateResponse : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:PhotoInfo.kt$PhotoInfo : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:PhotoMeasureResponse.kt$PhotoMeasureResponse : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:PhotoType.kt$PhotoType : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:RrmJobRequest.kt$RrmJobRequest : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:SavedJob.kt$SavedJob : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:UnallocatedPhotoDTO.kt$UnallocatedPhotoDTO : SerializableParcelable</ID>
      <ID>SerialVersionUIDInSerializableClass:UploadImageResponse.kt$UploadImageResponse : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:UploadWorksItemResponse.kt$UploadWorksItemResponse : Serializable</ID>
      <ID>SerialVersionUIDInSerializableClass:WorkflowUpdateResponse.kt$WorkflowUpdateResponse : SerializableParcelable</ID>
      <ID>SpreadOperator:AppDatabase.kt$AppDatabase.Companion$(*AppDatabase_Migrations.build())</ID>
      <ID>SwallowedException:FileUtil.kt$FileUtil$catch (e: Exception) { extension = null }</ID>
      <ID>SwallowedException:GPSUtils.kt$GPSUtils$catch (sie: IntentSender.SendIntentException) { Timber.i("PendingIntent unable to execute request.") }</ID>
      <ID>SwallowedException:SafeApiRequest.kt$SafeApiRequest$catch (exception: Exception) { null }</ID>
      <ID>TooGenericExceptionCaught:ApproveJobsFragment.kt$ApproveJobsFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:ApproveJobsFragment.kt$ApproveJobsFragment$throwable: Throwable</ID>
      <ID>TooGenericExceptionCaught:ApproveJobsViewModel.kt$ApproveJobsViewModel$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:ApproveMeasureFragment.kt$ApproveMeasureFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:ApproveMeasureViewModel.kt$ApproveMeasureViewModel$e: Exception</ID>
      <ID>TooGenericExceptionCaught:ApproveMeasureViewModel.kt$ApproveMeasureViewModel$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:AuthViewModel.kt$AuthViewModel$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:CaptureWorkFragment.kt$CaptureWorkFragment$e: Exception</ID>
      <ID>TooGenericExceptionCaught:CaptureWorkFragment.kt$CaptureWorkFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:CreateFragment.kt$CreateFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:CreateViewModel.kt$CreateViewModel$ex: Exception</ID>
      <ID>TooGenericExceptionCaught:DeferredLocationValidation.kt$DeferredLocationViewModel$e: Exception</ID>
      <ID>TooGenericExceptionCaught:DeferredLocationValidation.kt$DeferredLocationViewModel$e: Throwable</ID>
      <ID>TooGenericExceptionCaught:EstimatePhotoFragment.kt$EstimatePhotoFragment$e: Exception</ID>
      <ID>TooGenericExceptionCaught:EstimatePhotoFragment.kt$EstimatePhotoFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:EstimatesItem.kt$EstimatesItem$e: Exception</ID>
      <ID>TooGenericExceptionCaught:EstimatesItem.kt$EstimatesItem$e: NullPointerException</ID>
      <ID>TooGenericExceptionCaught:ExifDataCopier.kt$ExifDataCopier$ex: Exception</ID>
      <ID>TooGenericExceptionCaught:FileUriUtils.kt$FileUriUtils$ex: Exception</ID>
      <ID>TooGenericExceptionCaught:FileUtil.kt$FileUtil$e: Exception</ID>
      <ID>TooGenericExceptionCaught:HeaderItem.kt$HeaderItem$ex: Exception</ID>
      <ID>TooGenericExceptionCaught:HomeFragment.kt$HomeFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:HomeViewModel.kt$HomeViewModel$exception: Exception</ID>
      <ID>TooGenericExceptionCaught:HomeViewModel.kt$HomeViewModel$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:JobApprovalDataRepository.kt$JobApprovalDataRepository$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:JobApprovalDataRepository.kt$JobApprovalDataRepository$throwable: Throwable</ID>
      <ID>TooGenericExceptionCaught:JobInfoFragment.kt$JobInfoFragment$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:LoginActivity.kt$LoginActivity$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:MainActivity.kt$MainActivity$e: Exception</ID>
      <ID>TooGenericExceptionCaught:MeasureApprovalDataRepository.kt$MeasureApprovalDataRepository$exception: Exception</ID>
      <ID>TooGenericExceptionCaught:MeasureApprovalDataRepository.kt$MeasureApprovalDataRepository$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$e: Exception</ID>
    <ID>TooGenericExceptionCaught:MeasureCreationDataRepository.kt$MeasureCreationDataRepository$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:MeasureFragment.kt$MeasureFragment$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:MeasureViewModel.kt$MeasureViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:MeasureViewModel.kt$MeasureViewModel$ex: Exception</ID>
    <ID>TooGenericExceptionCaught:OfflineDataRepository.kt$OfflineDataRepository$ex: Exception</ID>
    <ID>TooGenericExceptionCaught:OfflineDataRepository.kt$OfflineDataRepository$ex: NullPointerException</ID>
    <ID>TooGenericExceptionCaught:OfflineDataRepository.kt$OfflineDataRepository$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:OfflineDataRepository.kt$OfflineDataRepository$throwable: Throwable</ID>
    <ID>TooGenericExceptionCaught:PhotoUtil.kt$PhotoUtil$e: Exception</ID>
    <ID>TooGenericExceptionCaught:PhotoUtil.kt$PhotoUtil$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:RegisterPinActivity.kt$RegisterPinActivity$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:ServiceUtil.kt$ServiceUtil$e: Exception</ID>
    <ID>TooGenericExceptionCaught:UnSubmittedFragment.kt$UnSubmittedFragment$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:UnSubmittedJobItem.kt$UnSubmittedJobItem$t: Throwable</ID>
      <ID>TooGenericExceptionCaught:Utils.kt$Utils$e: Exception</ID>
    <ID>TooGenericExceptionCaught:VerySafeApiRequest.kt$VerySafeApiRequest$throwable: Throwable</ID>
      <ID>TooGenericExceptionCaught:Wizard.kt$Wizard$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:WorkDataRepository.kt$WorkDataRepository$e: Exception</ID>
    <ID>TooGenericExceptionCaught:WorkDataRepository.kt$WorkDataRepository$ex: Exception</ID>
      <ID>TooGenericExceptionCaught:WorkDataRepository.kt$WorkDataRepository$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:WorkDataRepository.kt$WorkDataRepository$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:WorkDataRepository.kt$WorkDataRepository$throwable: Throwable</ID>
    <ID>TooGenericExceptionCaught:WorkFragment.kt$WorkFragment$t: Throwable</ID>
      <ID>TooGenericExceptionThrown:Coroutines.kt$Coroutines$throw Exception(exception)</ID>
      <ID>TooManyFunctions:AddProjectFragment.kt$AddProjectFragment : BaseFragment</ID>
      <ID>TooManyFunctions:AppDatabase.kt$AppDatabase : RoomDatabase</ID>
      <ID>TooManyFunctions:ApproveJobsFragment.kt$ApproveJobsFragment : BaseFragment</ID>
      <ID>TooManyFunctions:ApproveJobsViewModel.kt$ApproveJobsViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:ApproveMeasureFragment.kt$ApproveMeasureFragment : BaseFragmentDIAware</ID>
      <ID>TooManyFunctions:ApproveMeasureViewModel.kt$ApproveMeasureViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:AuthViewModel.kt$AuthViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:BaseConnectionApi.kt$BaseConnectionApi</ID>
      <ID>TooManyFunctions:BaseFragment.kt$BaseFragment : FragmentIProgressViewDIAware</ID>
      <ID>TooManyFunctions:CameraProvider.kt$CameraProvider : BaseProvider</ID>
      <ID>TooManyFunctions:CaptureGalleryFragment.kt$CaptureGalleryFragment : LocationFragment</ID>
      <ID>TooManyFunctions:CaptureItemMeasurePhotoFragment.kt$CaptureItemMeasurePhotoFragment : LocationFragmentDIAware</ID>
      <ID>TooManyFunctions:CaptureWorkFragment.kt$CaptureWorkFragment : LocationFragment</ID>
      <ID>TooManyFunctions:CapturedPictureRepository.kt$CapturedPictureRepository</ID>
      <ID>TooManyFunctions:CompressionProvider.kt$CompressionProvider : BaseProvider</ID>
      <ID>TooManyFunctions:Converters.kt$Converters</ID>
      <ID>TooManyFunctions:CreateFragment.kt$CreateFragment : BaseFragmentOfflineListenerDIAware</ID>
      <ID>TooManyFunctions:CreateViewModel.kt$CreateViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:DeferredLocationValidation.kt$DeferredLocationViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:EstimatePhotoFragment.kt$EstimatePhotoFragment : LocationFragment</ID>
      <ID>TooManyFunctions:FileOperations.kt$FileOperations$FileOperations</ID>
      <ID>TooManyFunctions:FileUriUtils.kt$FileUriUtils$FileUriUtils</ID>
      <ID>TooManyFunctions:FileUtil.kt$FileUtil$FileUtil</ID>
      <ID>TooManyFunctions:GoToFragment.kt$GoToFragment : LocationFragmentPermissionsListener</ID>
      <ID>TooManyFunctions:HomeFragment.kt$HomeFragment : BaseFragment</ID>
      <ID>TooManyFunctions:ImagePicker.kt$ImagePicker$Builder</ID>
      <ID>TooManyFunctions:ImagePickerActivity.kt$ImagePickerActivity : BaseActivity</ID>
      <ID>TooManyFunctions:JobApprovalDataRepository.kt$JobApprovalDataRepository : SafeApiRequest</ID>
      <ID>TooManyFunctions:JobCreationDataRepository.kt$JobCreationDataRepository : SafeApiRequest</ID>
      <ID>TooManyFunctions:JobDTO.kt$JobDTO : SerializableParcelable</ID>
      <ID>TooManyFunctions:JobDao.kt$JobDao</ID>
      <ID>TooManyFunctions:JobDaoTemp.kt$JobDaoTemp</ID>
      <ID>TooManyFunctions:JobDataController.kt$za.co.xisystems.itis_rrm.data.localDB.JobDataController.kt</ID>
      <ID>TooManyFunctions:JobInfoFragment.kt$JobInfoFragment : BaseFragmentDIAware</ID>
      <ID>TooManyFunctions:JobItemEstimateDao.kt$JobItemEstimateDao</ID>
      <ID>TooManyFunctions:JobItemEstimatePhotoDao.kt$JobItemEstimatePhotoDao</ID>
      <ID>TooManyFunctions:JobItemMeasureDao.kt$JobItemMeasureDao</ID>
      <ID>TooManyFunctions:LocationFragment.kt$LocationFragment : BaseFragment</ID>
      <ID>TooManyFunctions:LoginActivity.kt$LoginActivity : BaseActivityAuthListenerDIAware</ID>
      <ID>TooManyFunctions:MainActivity.kt$MainActivity : BaseActivityOnNavigationItemSelectedListenerDIAware</ID>
      <ID>TooManyFunctions:MeasureApprovalDataRepository.kt$MeasureApprovalDataRepository : SafeApiRequest</ID>
      <ID>TooManyFunctions:MeasureApprovalFragment.kt$MeasureApprovalFragment : BaseFragment</ID>
      <ID>TooManyFunctions:MeasureCreationDataRepository.kt$MeasureCreationDataRepository : SafeApiRequest</ID>
      <ID>TooManyFunctions:MeasureFragment.kt$MeasureFragment : BaseFragmentDIAware</ID>
      <ID>TooManyFunctions:MeasureViewModel.kt$MeasureViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:OfflineDataRepository.kt$OfflineDataRepository : SafeApiRequest</ID>
      <ID>TooManyFunctions:PhotoUtil.kt$PhotoUtil</ID>
      <ID>TooManyFunctions:ProjectDao.kt$ProjectDao</ID>
      <ID>TooManyFunctions:ProjectItemDao.kt$ProjectItemDao</ID>
      <ID>TooManyFunctions:ProjectSectionDao.kt$ProjectSectionDao</ID>
      <ID>TooManyFunctions:RegisterActivity.kt$RegisterActivity : AppCompatActivityAuthListenerDIAware</ID>
      <ID>TooManyFunctions:RegisterPinActivity.kt$RegisterPinActivity : AppCompatActivityAuthListenerDIAware</ID>
      <ID>TooManyFunctions:ResetPinActivity.kt$ResetPinActivity : AppCompatActivityAuthListenerDIAware</ID>
      <ID>TooManyFunctions:Scribe.kt$Scribe</ID>
      <ID>TooManyFunctions:SelectItemFragment.kt$SelectItemFragment : BaseFragmentDIAware</ID>
      <ID>TooManyFunctions:SubmitMeasureFragment.kt$SubmitMeasureFragment : BaseFragment</ID>
      <ID>TooManyFunctions:UnallocatedPhotoDao.kt$UnallocatedPhotoDao</ID>
      <ID>TooManyFunctions:UserDao.kt$UserDao</ID>
      <ID>TooManyFunctions:Utils.kt$Utils$Utils</ID>
      <ID>TooManyFunctions:Utils.kt$za.co.xisystems.itis_rrm.media.Utils.kt</ID>
      <ID>TooManyFunctions:WorkDataRepository.kt$WorkDataRepository : SafeApiRequest</ID>
      <ID>TooManyFunctions:WorkFragment.kt$WorkFragment : LocationFragment</ID>
      <ID>TooManyFunctions:WorkViewModel.kt$WorkViewModel : AndroidViewModel</ID>
      <ID>TooManyFunctions:XIArmoury.kt$XIArmoury : LifecycleObserver</ID>
      <ID>TopLevelPropertyNaming:JobTypeEntityDTO.kt$const val JobType_TABLE = "JobType_TABLE"</ID>
      <ID>TopLevelPropertyNaming:WfWorkStepDTO.kt$/** * Created by Francis Mahlava on 2020/02/12. */ const val WorkStep_TABLE = "WorkStep_TABLE"</ID>
      <ID>TopLevelPropertyNaming:WorkFlowsDTO.kt$const val WORKFLOWs_TABLE = "WORKFLOWs_TABLE"</ID>
      <ID>UnnecessaryAbstractClass:AbstractIntent.kt$AbstractIntent</ID>
      <ID>UnusedPrivateMember:AppExecutor.kt$AppExecutor.MainThreadExecutor$private val mainThreadHandler = Handler(Looper.getMainLooper())</ID>
      <ID>UnusedPrivateMember:BaseFragment.kt$BaseFragment$private lateinit var locationViewModel: LocationViewModel</ID>
      <ID>UnusedPrivateMember:BaseFragment.kt$BaseFragment$private val locationFactory by instance&lt;LocationViewModelFactory&gt;()</ID>
      <ID>UnusedPrivateMember:BaseFragment.kt$BaseFragment$private var gpsEnabled: Boolean = false</ID>
      <ID>UnusedPrivateMember:BaseFragment.kt$BaseFragment$private var networkEnabled: Boolean = false</ID>
      <ID>UnusedPrivateMember:CaptureViewModel.kt$CaptureViewModel$@Transaction private fun eraseExistingPhoto(photoId: String, fileName: String, photoPath: String)</ID>
      <ID>UnusedPrivateMember:CaptureViewModel.kt$CaptureViewModel$pointLocation: Double</ID>
      <ID>UnusedPrivateMember:CaptureWorkFragment.kt$CaptureWorkFragment$i</ID>
      <ID>UnusedPrivateMember:CapturedPictureRepository.kt$CapturedPictureRepository$photoDTO: JobItemEstimatesPhotoDTO</ID>
      <ID>UnusedPrivateMember:CarouselViewModel.kt$CarouselViewModel$@Transaction private fun eraseExistingPhoto(fileName: String, photoPath: String)</ID>
      <ID>UnusedPrivateMember:CarouselViewModel.kt$CarouselViewModel$private val mainContext = Job(superJob) + dispatchers.main()</ID>
      <ID>UnusedPrivateMember:CompressionProvider.kt$CompressionProvider.Companion$private val TAG = CompressionProvider::class.java.simpleName</ID>
      <ID>UnusedPrivateMember:Coroutines.kt$Coroutines$private val connectivityHandler = CoroutineExceptionHandler { _, exception -&gt; Timber.e(Exception(exception)) Exception(exception).printStackTrace() throw Exception(exception) }</ID>
      <ID>UnusedPrivateMember:CreateViewModel.kt$CreateViewModel$private val capturedPictureRepository: CapturedPictureRepository</ID>
      <ID>UnusedPrivateMember:CropProvider.kt$CropProvider.Companion$private val TAG = CropProvider::class.java.simpleName</ID>
      <ID>UnusedPrivateMember:DateUtil.kt$DateUtil$private val localDateTimeFormat: DateFormat = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss", Locale.ENGLISH)</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val DEFAULT_MAX_WAIT_TIME = DEFAULT_INTERVAL_IN_MILLISECONDS * 5</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val GEOJSON_SOURCE_ID = "GEOJSON_SOURCE_ID"</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val ICON_LAYER_ID = "ICON_LAYER_ID"</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val ICON_SOURCE_ID = "ICON_SOURCE_ID"</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val IMAGE_REQ_CODE = 101</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val RED_PIN_ICON_ID = "RED_PIN_ICON_ID"</ID>
      <ID>UnusedPrivateMember:EstimatePhotoFragment.kt$EstimatePhotoFragment.Companion$private const val ROUTE_LAYER_ID = "ROUTE_LAYER_ID"</ID>
      <ID>UnusedPrivateMember:GalleryProvider.kt$GalleryProvider$externalFilesDir: File</ID>
      <ID>UnusedPrivateMember:GalleryProvider.kt$GalleryProvider$private var adapter: ImageAdapter? = null</ID>
      <ID>UnusedPrivateMember:GalleryProvider.kt$GalleryProvider$private var images = java.util.ArrayList&lt;Image&gt;()</ID>
      <ID>UnusedPrivateMember:GeocodeCaptureUseCase.kt$GeocodeCaptureUseCase$estimateId: String</ID>
      <ID>UnusedPrivateMember:GeocodeCaptureUseCase.kt$GeocodeCaptureUseCase$photoType: PhotoType</ID>
      <ID>UnusedPrivateMember:GeocodeCaptureUseCase.kt$GeocodeCaptureUseCase$private val capturedPictureRepository: CapturedPictureRepository</ID>
      <ID>UnusedPrivateMember:GeocodeCaptureUseCase.kt$GeocodeCaptureUseCase$private val jobCreationDataRepository: JobCreationDataRepository</ID>
      <ID>UnusedPrivateMember:GeocodeCaptureUseCase.kt$GeocodeCaptureUseCase$unallocatedPhotoId: String</ID>
      <ID>UnusedPrivateMember:GoToFragment.kt$GoToFragment.Companion$private const val REQUEST_STORAGE_PERMISSION = 1010</ID>
      <ID>UnusedPrivateMember:GoToViewModel.kt$GoToViewModel$private val dataRepository: WorkDataRepository</ID>
      <ID>UnusedPrivateMember:ImagePickerActivity.kt$ImagePickerActivity.Companion$private const val TAG = "image_picker"</ID>
      <ID>UnusedPrivateMember:ImageViewExtension.kt$applyCircle: Boolean = false</ID>
      <ID>UnusedPrivateMember:IntentUtils.kt$IntentUtils$context: Context</ID>
      <ID>UnusedPrivateMember:IntentUtils.kt$IntentUtils$pictureFolderUri: File</ID>
      <ID>UnusedPrivateMember:JobCreationDataRepository.kt$JobCreationDataRepository$private val coroutineScope = CoroutineScope(dispatchers.main())</ID>
      <ID>UnusedPrivateMember:JobsPagingSource.kt$JobsPagingSource$private val dispatchers: za.co.xisystems.itis_rrm.utils.DispatcherProvider = za.co.xisystems.itis_rrm.utils.DefaultDispatcherProvider()</ID>
      <ID>UnusedPrivateMember:JobsPagingSource.kt$JobsPagingSource$private val query: String</ID>
      <ID>UnusedPrivateMember:JobsPagingSource.kt$JobsPagingSource$private val workDataRepository: WorkDataRepository</ID>
      <ID>UnusedPrivateMember:LinkCaptureToJobItemEstimateUseCase.kt$LinkCaptureToJobItemEstimateUseCase$estimateId: String</ID>
      <ID>UnusedPrivateMember:LinkCaptureToJobItemEstimateUseCase.kt$LinkCaptureToJobItemEstimateUseCase$photoType: PhotoType</ID>
      <ID>UnusedPrivateMember:LinkCaptureToJobItemEstimateUseCase.kt$LinkCaptureToJobItemEstimateUseCase$private val capturedPictureRepository: CapturedPictureRepository</ID>
      <ID>UnusedPrivateMember:LinkCaptureToJobItemEstimateUseCase.kt$LinkCaptureToJobItemEstimateUseCase$private val jobCreationDataRepository: JobCreationDataRepository</ID>
      <ID>UnusedPrivateMember:LinkCaptureToJobItemEstimateUseCase.kt$LinkCaptureToJobItemEstimateUseCase$unallocatedPhotoId: String</ID>
      <ID>UnusedPrivateMember:ServiceUriUtil.kt$ServiceUriUtil.Companion$private val TAG = ServiceUriUtil::class.java.simpleName</ID>
      <ID>UnusedPrivateMember:SettingsActivity.kt$SettingsActivity.Companion$private val TAG = SettingsActivity::class.java.simpleName</ID>
      <ID>UnusedPrivateMember:VoItemsRepository.kt$/** * Created by Francis Mahlava on 2019/11/19. */ private const val MINIMUM_INTERVAL1 = 6</ID>
      <ID>UnusedPrivateMember:WorkStateItem.kt$WorkStateItem$private val viewModel: WorkViewModel</ID>
      <ID>UnusedPrivateMember:WorkStateItem.kt$WorkStateItem$private var groupAdapter: GroupAdapter&lt;com.xwray.groupie.viewbinding.GroupieViewHolder&lt;ListSelectorBinding&gt;&gt;</ID>
      <ID>UnusedPrivateMember:XIArmoury.kt$XIArmoury$private lateinit var userSessionKey: SecureString</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_1000: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_250: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_500: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_750: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_long: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_short: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val bounce_soft: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val scale_light: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val shake_delay: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val shake_long: Animation</ID>
      <ID>VariableNaming:Animations.kt$Animations$@JvmField val shake_longer: Animation</ID>
      <ID>VariableNaming:AppExecutor.kt$AppExecutor$private val LOCK = Any()</ID>
      <ID>VariableNaming:ToastUtils.kt$ToastUtils$val versionName_flavor = "Version " + BuildConfig.VERSION_NAME + " - " + BuildConfig.FLAVOR + "\n"</ID>
      <ID>WildcardImport:CapturedPictureRepository.kt$import kotlinx.coroutines.*</ID>
      <ID>WildcardImport:JobCreationDataRepository.kt$import za.co.xisystems.itis_rrm.utils.*</ID>
  </CurrentIssues>
</SmellBaseline>
